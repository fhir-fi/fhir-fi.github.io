{"version":3,"file":"component---src-pages-background-js-199ff073190fd967a58a.js","mappings":"wIAEA,MAAMA,EAAaC,EAAAA,YAAiB,CAACC,EAAOC,KAC1C,MACEC,SAAUC,GAAgB,EAAI,SAC9BC,EAAQ,OACRC,EACAC,OAAQC,EAAc,KAAK,SAC3BC,EAAW,CAAC,EAAC,YACbC,EAAW,cACXC,EAAa,OACbC,EAAM,KACNC,EAAI,WACJC,EAAU,IACVC,EACAC,MAAOC,KACJC,GACDjB,GACE,OAAEkB,GAAWV,GAEZO,EAAOI,GAAYpB,EAAAA,SAAeiB,IAClCV,EAAQc,GAAarB,EAAAA,SAAeQ,IACpCL,EAAUmB,GAAetB,EAAAA,SAAeI,GAsB/C,GApBAJ,EAAAA,WAAgB,KACd,GAAIgB,EAEF,OAEF,MAAMO,EAAe,IAAIC,gBAAgBL,GASzC,GARII,EAAaE,IAAI,UACnBL,GAAUG,EAAaG,IAAI,UACvBH,EAAaE,IAAI,WACnBJ,GAAWE,EAAaG,IAAI,YAG9BN,EAAsB,oBAANO,OAAyBA,OAAOC,WAAa,MAE3DL,EAAaE,IAAI,YAAa,CAChC,MAAMrB,EAAgBmB,EAAaG,IAAI,YAAYG,cACnDP,GAAa,CAAC,QAAS,KAAM,OAAOQ,MAAKC,GAAKA,IAAM3B,IACtD,IACC,CAACe,EAAQH,SAEEgB,IAAVhB,EACF,OAAO,KAGT,MACMiB,EAAc,GACdC,EAAYlB,EAAQT,EAAS,IAFhB,IAInB,SAAS4B,EAAcC,GAAuB,IACxCC,EACAC,GAFkB,EAAEC,EAAC,EAAEC,EAAC,UAAEC,GAAWL,EAGrCM,GAAM,EACNC,GAAM,EACNC,EAAU,EACd,KAAOF,GAAMT,GACRS,GAAO1B,EAAQiB,GACfU,GAAMV,GACNU,GAAOpC,EAAS0B,GAAc,CACjC,GAAIW,IAAY,GAEd,MAAO,CAAEL,IAAGC,IAAGC,aAMjB,OAJAJ,EAAYQ,KAAKC,MAlBF,IAkBQD,KAAKE,UAA0B,GACtDV,GAAYA,EAAWJ,EACvBK,EAAgBG,EAAYI,KAAKC,MAAsB,EAAhBD,KAAKE,UAAgB,EAC5DT,GAAgB,EACRA,GACN,KAAK,EACHI,EAAKH,EACLI,EAAKH,EAAIH,EACT,MACF,KAAK,EACHK,EAAKH,EAAIF,EACTM,EAAKH,EAAIH,EACT,MACF,KAAK,EACHK,EAAKH,EAAIF,EACTM,EAAKH,EACL,MACF,KAAK,EACHE,EAAKH,EAAIF,EACTM,EAAKH,EAAIH,EACT,MACF,KAAK,EACHK,EAAKH,EACLI,EAAKH,EAAIH,EACT,MACF,KAAK,EACHK,EAAKH,EAAIF,EACTM,EAAKH,EAAIH,EACT,MACF,KAAK,EACHK,EAAKH,EAAIF,EACTM,EAAKH,EACL,MACF,KAAK,EACHE,EAAKH,EAAIF,EACTM,EAAKH,EAAIH,EAIf,CACA,MAAO,CAAEE,EAAGG,EAAIF,EAAGG,EAAIF,UAAWH,EACpC,CAEA,MAAMU,EAAU,GAChB,IAAK,IAAIC,EAAE,EAAGA,EAAIf,EAAWe,GAAK,EAAG,CACnC,MAAMC,EAAS,GACf,IAAIC,EAAKN,KAAKE,SAAW/B,EACzBmC,GAAMA,EAAKlB,EACX,IAAImB,EAAKP,KAAKE,SAAWxC,EACzB6C,GAAMA,EAAKnB,EACX,IAAIoB,EAAaR,KAAKC,MAAsB,EAAhBD,KAAKE,UACjC,IAAK,IAAIE,EAAE,EAAGA,EAAI,EAAGA,GAAK,EAAG,CAC3B,MAAM,EAAEV,EAAC,EAAEC,EAAC,UAAEC,GAAcN,EAAe,CAAEI,EAAGY,EAAIX,EAAGY,EAAIX,UAAWY,IACtEH,EAAOI,KAAQf,EAAC,IAAIC,GACpBW,EAAKZ,EACLa,EAAKZ,EACLa,EAAaZ,CACf,CACA,MAAM5B,EAAI,IAAOqC,EAAOK,KAAK,KAC7BP,EAAQM,KAAKzC,EACf,CACA,MAAM2C,EAAIR,EAAQO,KAAK,KAEjBE,EAAa,GAEnB,IAAK,IAAIR,EAAE,EAAGA,EAAIjC,EAAOiC,GAAKhB,EAC5BwB,EAAWH,KAAKtD,EAAAA,cAAA,QAAM0D,IAAG,IAAMT,EAAKP,GAAIO,EAF3BhB,EAEuC0B,GAAIV,EAF3ChB,EAEuD2B,GAAIrD,EAF3D0B,KAIf,IAAK,IAAIgB,EAAE,EAAGA,EAAI1C,EAAQ0C,GAAKhB,EAC7BwB,EAAWH,KAAKtD,EAAAA,cAAA,QAAM0D,IAAG,IAAMT,EAAKU,GAAI3C,EAAO2B,GAAIM,EALtChB,EAKkD2B,GAAIX,EALtDhB,KAQf,MAAM4B,EAAK,mJASNvD,EAAM,uDAML,IAAE,0OAeR,OACEN,EAAAA,cAAA,MAAA8D,OAAAC,OAAA,CACE7D,IAAKA,EACL8D,MAAM,6BACNhD,MAAUA,EAAK,KACfT,OAAWA,EAAM,KACjB0D,QAAO,OAASjD,EAAK,IAAIT,EACzB2D,oBAAoB,kBAChBhD,GAEJlB,EAAAA,cAAA,YACEA,EAAAA,cAAA,aAAQ6D,IAEV7D,EAAAA,cAAA,KAAGmE,UAAU,uBACVV,EACDzD,EAAAA,cAAA,QACEoE,OAAO,UACPnC,YAAaA,EACboC,aAAa,qBACbC,cAAc,SACdd,EAAGA,IAELxD,EAAAA,cAAA,QACEoE,OAAO,QACPnC,YAAY,MACZoC,aAAa,qBACbE,eAAe,OACff,EAAGA,IAEHrD,EAEAH,EAAAA,cAAA,UAAQwE,KAAK,QAAQC,EAAE,KACrBzE,EAAAA,cAAA,iBAAe0E,IAAQ1D,EAAQT,EAAS,IAAK,IAAKoE,YAAY,aAAa9D,KAAM2C,KAGnF,MAGA,IAIV,W","sources":["webpack://fhir-demo-2024/./src/pages/background.js"],"sourcesContent":["import * as React from 'react';\n\nconst Background = React.forwardRef((props, ref) => {\n  const {\n    animated: animatedParam = true,\n    children,\n    dimmed,\n    height: heightParam = 15000,\n    location = {},\n    pageContext,\n    pageResources,\n    params,\n    path,\n    serverData,\n    uri,\n    width: widthParam,\n    ...rest // This is what we really want...\n  } = props;\n  const { search } = location;\n\n  const [width, setWidth] = React.useState(widthParam);\n  const [height, setHeight] = React.useState(heightParam);\n  const [animated, setAnimated] = React.useState(animatedParam);\n\n  React.useEffect(() => {\n    if (width) {\n      // already set through a parameter\n      return;\n    }\n    const searchParams = new URLSearchParams(search);\n    if (searchParams.has('width')) {\n      setWidth(+searchParams.get('width'));\n      if (searchParams.has('height')) {\n        setHeight(+searchParams.get('height'));\n      }\n    } else {\n      setWidth(typeof window !== `undefined` ? window.innerWidth : 2500);\n    }\n    if (searchParams.has('animated')) {\n      const animatedParam = searchParams.get('animated').toLowerCase();\n      setAnimated(!['false', 'no', 'not'].some(v => v === animatedParam));\n    }\n  }, [search, width]);\n\n  if (width === undefined) {\n    return null;\n  }\n\n  const lineLength = 300;\n  const strokeWidth = 14;\n  const lineCount = width * height / 1000 / lineLength;\n  \n  function getRandomCoord({ x, y, direction }) {\n    let distance;\n    let newDirection;\n    let x1 = -1;\n    let y1 = -1;\n    let counter = 0;\n    while (x1 <= strokeWidth\n      || x1 >= (width - strokeWidth)\n      || y1 <= strokeWidth\n      || y1 >= (height - strokeWidth)) {\n      if (counter++ > 10) {\n        // Too difficult, we're in a tough corner...\n        return { x, y, direction};\n      }\n      distance = (Math.floor(Math.random() * lineLength)) + 20;\n      distance -= distance % strokeWidth;\n      newDirection =  direction + Math.floor(Math.random() * 4) + 6;\n      newDirection %= 8;\n      switch (newDirection) {\n        case 0:\n          x1 = x;\n          y1 = y - distance;\n          break;\n        case 1:\n          x1 = x + distance;\n          y1 = y - distance;\n          break;\n        case 2:\n          x1 = x + distance;\n          y1 = y;\n          break;\n        case 3:\n          x1 = x + distance;\n          y1 = y + distance;\n          break;\n        case 4:\n          x1 = x;\n          y1 = y + distance;\n          break;\n        case 5:\n          x1 = x - distance;\n          y1 = y + distance;\n          break;\n        case 6:\n          x1 = x - distance;\n          y1 = y;\n          break;\n        case 7:\n          x1 = x - distance;\n          y1 = y - distance;\n          break;\n        default:\n      }\n    }\n    return { x: x1, y: y1, direction: newDirection };\n  }\n  \n  const pattern = [];\n  for (let i=0; i < lineCount; i += 1) {\n    const coords = [];\n    let x0 = Math.random() * width;\n    x0 -= x0 % strokeWidth;\n    let y0 = Math.random() * height;\n    y0 -= y0 % strokeWidth;\n    let direction0 = Math.floor(Math.random() * 8);\n    for (let i=0; i < 8; i += 1) {\n      const { x, y, direction } = getRandomCoord({ x: x0, y: y0, direction: direction0 });\n      coords.push(`${x},${y}`);\n      x0 = x;\n      y0 = y;\n      direction0 = direction;\n    }\n    const path = `M${coords.join('L')}`;\n    pattern.push(path);\n  }\n  const d = pattern.join(' ');\n\n  const rulerLines = [];\n  const adjust = strokeWidth / 2;\n  for (let i=0; i < width; i += strokeWidth) {\n    rulerLines.push(<line key={`v${i}`} x1={i + adjust} x2={i + adjust} y2={height + adjust} />);\n  }\n  for (let i=0; i < height; i += strokeWidth) {\n    rulerLines.push(<line key={`h${i}`} x2={width} y1={i + adjust} y2={i + adjust} />);\n  }\n\n  const style = `\n    line {\n      stroke-width: 0.5px;\n      stroke: #010259;\n      stroke-opacity: 0.4;\n    }\n    path {\n      fill: none;\n    }\n    ${ dimmed\n      ? `\n      g {\n        opacity: 0.15;\n      }\n      `\n      : ''\n    }\n    @media screen and (prefers-reduced-motion: reduce) {\n      circle {\n        animation: none !important;\n        display: none;\n      }\n    }\n    @media print {\n      circle {\n        display: none;\n      }\n    }\n  `;\n\n  return (\n    <svg\n      ref={ref}\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width={`${width}px`}\n      height={`${height}px`}\n      viewBox={`0 0 ${width} ${height}`}\n      preserveAspectRatio=\"xMidYMid slice\"\n      {...rest}\n    >\n      <defs>\n        <style>{style}</style>\n      </defs>\n      <g transform=\"translate(0.5, 0.5)\">\n        {rulerLines}\n        <path\n          stroke=\"#010259\"\n          strokeWidth={strokeWidth}\n          vectorEffect=\"non-scaling-stroke\"\n          strokeLinecap=\"square\"\n          d={d}\n        />\n        <path\n          stroke=\"white\"\n          strokeWidth=\"1px\"\n          vectorEffect=\"non-scaling-stroke\"\n          shapeRendering=\"auto\"\n          d={d}\n        />\n        { animated\n        ? (\n          <circle fill=\"white\" r=\"2\">\n            <animateMotion dur={`${width * height / 50000}s`} repeatCount=\"indefinite\" path={d} />\n          </circle>\n        )\n        : null\n        }\n      </g>\n    </svg>\n  )\n});\n\nexport default Background;\n"],"names":["Background","React","props","ref","animated","animatedParam","children","dimmed","height","heightParam","location","pageContext","pageResources","params","path","serverData","uri","width","widthParam","rest","search","setWidth","setHeight","setAnimated","searchParams","URLSearchParams","has","get","window","innerWidth","toLowerCase","some","v","undefined","strokeWidth","lineCount","getRandomCoord","_ref","distance","newDirection","x","y","direction","x1","y1","counter","Math","floor","random","pattern","i","coords","x0","y0","direction0","push","join","d","rulerLines","key","x2","y2","style","Object","assign","xmlns","viewBox","preserveAspectRatio","transform","stroke","vectorEffect","strokeLinecap","shapeRendering","fill","r","dur","repeatCount"],"sourceRoot":""}